diff --git a/CMakeLists.txt b/CMakeLists.txt
index 8077561..1418a47 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -122,16 +122,16 @@ include_directories(${PYTHON_INCLUDE_PATH})
 # Dynamic linking with tf worked OK, except for exception propagation, which failed in the unit test.
 # so build with the objects directly instead.
 
-link_libraries(${PYTHON_LIBRARIES})
-add_library(pytf_py src/pytf.cpp src/tf.cpp src/transform_listener.cpp src/cache.cpp)
-add_dependencies(pytf_py ${PROJECT_NAME}_gencpp)
+# link_libraries(${PYTHON_LIBRARIES})
+# add_library(pytf_py src/pytf.cpp src/tf.cpp src/transform_listener.cpp src/cache.cpp)
+# add_dependencies(pytf_py ${PROJECT_NAME}_gencpp)
 
-find_package(PythonLibs REQUIRED)
-set_target_properties(pytf_py PROPERTIES OUTPUT_NAME tf PREFIX "_" SUFFIX ".so"
-  LIBRARY_OUTPUT_DIRECTORY ${CATKIN_DEVEL_PREFIX}/${PYTHON_INSTALL_DIR}/tf)
+# find_package(PythonLibs REQUIRED)
+# set_target_properties(pytf_py PROPERTIES OUTPUT_NAME tf PREFIX "_" SUFFIX ".so"
+# LIBRARY_OUTPUT_DIRECTORY ${CATKIN_DEVEL_PREFIX}/${PYTHON_INSTALL_DIR}/tf)
 
 
-target_link_libraries(pytf_py ${Boost_LIBRARIES} ${catkin_LIBRARIES})
+# target_link_libraries(pytf_py ${Boost_LIBRARIES} ${catkin_LIBRARIES})
 endif()
 
 if(CATKIN_ENABLE_TESTING AND NOT ANDROID)
